generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"

}
model Store {
 id String @id @default(uuid())
  name String
  userId String
  billboards Billboard[] @relation("BillBoardToStore")
  categories Category[] @relation("StoreToCategory")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}
model User {
  id String @id @default(uuid())
  email String @unique
  googleId String? @unique
  displayName  String
  passwordHash String?
  avatarUrl String?
  authType AuthType
  userRole UserRole @default(USER)
  address Address[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Address {
  id String @id @default(uuid())
  addressType AddressType
  street String
  city String
  state String
  zip String
  userId String
 user User @relation(fields: [userId],references: [id],onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}
model Billboard {
  id String @id @default(uuid())
  storeId String
  store Store @relation("BillBoardToStore",fields: [storeId],references: [id],onDelete: Cascade)
  Categories Category[] @relation()
  label String
  imageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([storeId])
}
model Category {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToCategory",fields: [storeId],references: [id],onDelete: Cascade)
  billboardId String
  billboard Billboard @relation(fields: [billboardId],references: [id],onDelete: Cascade)
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([storeId])
  @@index([billboardId])
}
enum AddressType {
  HOME
  WORK
  OTHER
}
enum AuthType {
  GOOGLE
  EMAIL
}
enum UserRole {
  ADMIN
  USER
}
